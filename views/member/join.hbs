<form name="frm" id='frm' method="POST" action="/member/join" class="row g-3 needs-validation" novalidate>
	{{> memberJoinForm }}

	<div class="col-12">
		<button class="btn btn-primary" type="submit">등록</button>
	</div>
</form>

<script>
	const dupId = (event) =>{
		const form = document.querySelector("#frm");
		const message = document.querySelector("#id-message");

		//form.addEventListener('submit', (event) => {
			//preverntDefault();
			const memberId = document.querySelector("#memberId").value;
			if(memberId != ''){
				const xhr = new XMLHttpRequest();
				xhr.open('POST', 'http://localhost:5000/member/join/dupId', true);

				xhr.setRequestHeader('Content-type', 'application/json');
				xhr.onload = () => {
					if(xhr.status === 200){
						const response = JSON.parse(xhr.responseText);
						if(response.idExists){
							message.innerHTML = '<span class="badge bg-danger">아이디가 사용중입니다.</span>';
							$('#memberId').val("");
							$('#memberId').focus();
						}else{
							message.innerHTML = '<span class="badge bg-success">사용 가능한 아이디입니다.</span>';
						}
					}else{
						message.innerHTML = '<span class="badge bg-info">오류 발생.</span>';
					}
				};
				xhr.onerror = () => {
					message.innerHTML = '<span class="badge bg-info">오류 발생!.</span>';
				};
				xhr.send(JSON.stringify({ memberId }));
			}else{
				message.innerHTML = '<span class="badge bg-info">아이디를 입력하세요.</span>';
			}
		//});
	}
	// Example starter JavaScript for disabling form submissions if there are invalid fields
	(() => {
		'use strict'

		// Fetch all the forms we want to apply custom Bootstrap validation styles to
		const forms = document.querySelectorAll('.needs-validation')

		// Loop over them and prevent submission
		Array.from(forms).forEach(form => {
			form.addEventListener('submit', event => {
				if (!form.checkValidity()) {
					event.preventDefault()
					event.stopPropagation()
				}

				form.classList.add('was-validated')
			}, false)
		})
	})()
</script>